//
//  VedioMPViewController.h
//  JamMusic
//
//  Created by jimneylee on 10-7-2.
//  Copyright 2010-2013 jimneylee. All rights reserved.
//

#import "VideoMPViewController.h"
#import <QuartzCore/QuartzCore.h>

#define TIME_INTERVAL 0.5

static VideoMPViewController* sharedVideoPlayer = nil;

@implementation VideoMPViewController
@synthesize videoPlayerDelegate;

+ (id)sharedVideoPlayer
{
    if (!sharedVideoPlayer) {
        sharedVideoPlayer = [[VideoMPViewController alloc] init];
    }
    
    return sharedVideoPlayer;
}

- (id)initWithVideoURLString:(NSString*)videoURLString
{
	if (self = [super init]) 
	{		
		//添加视频播放控件
        if (!videoURLString)
		{
			NSLog(@"Error: video url error!");
			return nil;
		}
		
        self.hidesBottomBarWhenPushed = YES;
        
        //@"http://192.168.10.83:8090/live/db3bd108e3364bf3888ccaf8377af077/index.m3u8"
        NSURL *videoURL = [NSURL URLWithString:videoURLString];
        //NSURL *videoURL = [NSURL URLWithString:@"http://192.168.10.83:8090/vod/f5.mp4"];
        //NSURL *videoURL = [NSURL URLWithString:[[NSBundle mainBundle] pathForResource:@"testvideo" ofType:@"mp4"]];
		moviePlayerViewController = [[MPMoviePlayerViewController alloc]
										initWithContentURL:videoURL];
		moviePlayerViewController.view.frame = [UIScreen mainScreen].bounds; 
		moviePlayerViewController.view.autoresizingMask 
			= UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;

		MPMoviePlayerController *moviePlayer = [moviePlayerViewController moviePlayer];
		
#if 1		
		[[NSNotificationCenter defaultCenter] 
		 addObserver:self
		 selector:@selector(movieFinishedCallback:)                                                 
		 name:MPMoviePlayerPlaybackDidFinishNotification
		 object:moviePlayer];
#endif	
		moviePlayer.controlStyle = MPMovieControlStyleFullscreen;
        
        // 视频强行横屏播放
        UIInterfaceOrientation orientation = [UIApplication sharedApplication].statusBarOrientation;
        CGFloat radians = 0;
        if (UIInterfaceOrientationIsPortrait(orientation)) {
            if (orientation == UIInterfaceOrientationLandscapeLeft) {
                radians = -(CGFloat)M_PI_2;
            }
            else {
                radians = (CGFloat)M_PI_2;
            }
            CGAffineTransform landscapeTransform = CGAffineTransformMakeRotation(radians);
            self.view.transform = landscapeTransform;
            
            // 视频强行横屏播放
            [[UIApplication sharedApplication] setStatusBarOrientation:UIInterfaceOrientationLandscapeRight animated:NO];
            
            [[self view] setBounds:CGRectMake(0, 0, 480, 320)];
            [[self view] setCenter:CGPointMake(160, 240)];
        }
        
		[moviePlayer play];
		
		[self.view addSubview:moviePlayerViewController.view];
        CGPoint origin = moviePlayerViewController.view.origin;
        moviePlayerViewController.view.origin = CGPointMake(origin.x, origin.y - 20.f);
	}
	return self;
}

//内存释放
- (void)dealloc
{
	[moviePlayerViewController release];
    [super dealloc];
}

- (void)playWithVideoURL:(NSString*)videoURL
{
    
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    self.navigationController.navigationBarHidden = YES;
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    self.navigationController.navigationBarHidden = NO;
}

//- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event
//{
//	UITouch *touch = [touches anyObject];
//	[self doRippleAnimation];
//}	
//
//-(void)doRippleAnimation
//{
//	//水波动画
//	CATransition *animation = [CATransition animation];
//	animation.delegate = self;
//	animation.duration = 2.0f;
//	animation.timingFunction = UIViewAnimationCurveEaseInOut;
//	animation.fillMode = kCAFillModeForwards;
////	animation.removedOnCompletion = NO;
//	
//	animation.type = @"rippleEffect";
//	[moviePlayerViewController.view.layer addAnimation:animation forKey:@"animation"];
//	
//}

//电影播放的回调函数
- (void) movieFinishedCallback:(NSNotification*) aNotification 
{
    MPMoviePlayerController *player = [aNotification object];
    
    [[NSNotificationCenter defaultCenter] 
	 removeObserver:self
	 name:MPMoviePlayerPlaybackDidFinishNotification
	 object:player];
    
	[player stop];
	//这边内存释放可能有问题
    //[player autorelease];
    
	[videoPlayerDelegate didMoviePlayEnd];
}

@end
